name: Unity CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  UNITY_PROJECT_PATH: unity-project
  API_PORT: 5018
  API_BASE_URL: http://127.0.0.1:5018
  E2E_CATEGORY: e2e

jobs:
  unity-tests-ubuntu:
    name: Test (PlayMode E2E, Ubuntu)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    permissions:
      contents: read
      checks: write

    steps:
      - name: Checkout Unity project
        uses: actions/checkout@v4
        with:
          path: ${{ env.UNITY_PROJECT_PATH }}
          fetch-depth: 0

      - name: Detect Unity version
        id: unityver
        shell: bash
        run: |
          v=$(grep -oP '(?<=m_EditorVersion:\s).*' "${{ env.UNITY_PROJECT_PATH }}/ProjectSettings/ProjectVersion.txt")
          echo "version=$v" >> "$GITHUB_OUTPUT"

      - name: Checkout MyCore API
        uses: actions/checkout@v4
        with:
          repository: hiskiapp/MyCore
          path: mycore-api
          fetch-depth: 1

      - name: Setup PostgreSQL
        uses: ankane/setup-postgres@v1
        with:
          database: mycoredb

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: mycore-api/**/*.csproj

      - name: Restore + Build API
        working-directory: mycore-api
        shell: bash
        run: |
          set -euo pipefail
          dotnet restore
          dotnet build --no-restore -c Release

      - name: Start API and wait
        working-directory: mycore-api
        shell: bash
        env:
          ConnectionStrings__DefaultConnection: "Host=localhost;Database=mycoredb;Username=runner;Password="
          ASPNETCORE_URLS: "http://+:${{ env.API_PORT }}"
        run: |
          set -euo pipefail
          nohup dotnet run --project MyCore.Api/MyCore.Api.csproj --no-build -c Release > api.log 2>&1 &
          echo "API_PID=$!" >> $GITHUB_ENV
          for i in {1..90}; do
            curl -sf "${{ env.API_BASE_URL }}/pets" >/dev/null && break || sleep 1
          done

      - name: Verify seeded data
        shell: bash
        run: |
          set -euo pipefail
          curl -sf "${{ env.API_BASE_URL }}/pets" | grep -q '"name":"Doggo"'

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: ${{ env.UNITY_PROJECT_PATH }}/Library
          key: >
            UnityLibrary-${{ runner.os }}-Unity${{ steps.unityver.outputs.version }}-PlayMode-
            ${{ hashFiles(format('{0}/Packages/manifest.json', env.UNITY_PROJECT_PATH)) }}
          restore-keys: |
            UnityLibrary-${{ runner.os }}-Unity${{ steps.unityver.outputs.version }}-PlayMode-
            UnityLibrary-${{ runner.os }}-Unity${{ steps.unityver.outputs.version }}-
            UnityLibrary-${{ runner.os }}-
            UnityLibrary-

      - id: unitytests
        name: Run Unity PlayMode E2E
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          API_URL: "${{ env.API_BASE_URL }}/pets"
        with:
          projectPath: ${{ env.UNITY_PROJECT_PATH }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: PlayMode
          useHostNetwork: true
          artifactsPath: artifacts
          # enforce e2e-only
          customParameters: -logFile - -testCategory ${{ env.E2E_CATEGORY }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unity-test-results-ubuntu
          path: ${{ steps.unitytests.outputs.artifactsPath }}
          retention-days: 7
          if-no-files-found: warn

      - name: Upload API log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-log
          path: mycore-api/api.log
          retention-days: 7
          if-no-files-found: warn

      - name: Stop API
        if: always()
        shell: bash
        run: |
          if [[ -n "${API_PID:-}" ]]; then
            kill "$API_PID" || true
          fi

  build-unity-windows:
    name: Build (Windows x64)
    runs-on: windows-latest
    needs: unity-tests-ubuntu
    timeout-minutes: 60
    permissions:
      contents: read

    steps:
      - name: Checkout Unity project
        uses: actions/checkout@v4
        with:
          path: ${{ env.UNITY_PROJECT_PATH }}
          fetch-depth: 0

      - name: Detect Unity version
        id: unityver
        shell: bash
        run: |
          v=$(grep -oP '(?<=m_EditorVersion:\s).*' "${{ env.UNITY_PROJECT_PATH }}/ProjectSettings/ProjectVersion.txt")
          echo "version=$v" >> "$GITHUB_OUTPUT"

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: ${{ env.UNITY_PROJECT_PATH }}/Library
          key: >
            UnityLibrary-${{ runner.os }}-Unity${{ steps.unityver.outputs.version }}-StandaloneWindows64-
            ${{ hashFiles(format('{0}/Packages/manifest.json', env.UNITY_PROJECT_PATH)) }}
          restore-keys: |
            UnityLibrary-${{ runner.os }}-Unity${{ steps.unityver.outputs.version }}-StandaloneWindows64-
            UnityLibrary-${{ runner.os }}-Unity${{ steps.unityver.outputs.version }}-
            UnityLibrary-${{ runner.os }}-
            UnityLibrary-

      - name: Build Windows Player
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ env.UNITY_PROJECT_PATH }}
          targetPlatform: StandaloneWindows64
          buildPath: build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: unity-build-windows
          path: ${{ env.UNITY_PROJECT_PATH }}/build
          retention-days: 7
          if-no-files-found: error
